# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end
source 'https://github.com/CocoaPods/Specs.git'
source 'https://gitlab.com/phyreapp/ios-specs.git'
target 'WeavrInAppProvisioningTestApp' do
  config = use_native_modules!
  pod 'ApplePayProvisioning', '>=1.0.0'
  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'WeavrInAppProvisioningTestAppTests' do
    inherit! :complete
    # Pods for testing
  end

  $dynamic_frameworks = ['Alamofire', 'ObjectMapper', 'AlamofireObjectMapper', 'EasyPeasy', 'ApplePayProvisioning']	
  pre_install do |installer|	
   installer.pod_targets.each do |pod|	
    if $dynamic_frameworks.include?(pod.name)	
     puts "Overriding the build_type to dynamic_framework for #{pod.name}"	
     def pod.build_type;	
     Pod::BuildType.dynamic_framework	
    end	
   end	
  end

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
     installer,
     config[:reactNativePath],
     :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    installer.pods_project.targets.each do |t|
     t.build_configurations.each do |config|
      if $dynamic_frameworks.include?(t.name)
       config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
       end
  #    config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64 i386"
      if config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'].to_f < 11.0
       config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0'
      end
      if config.base_configuration_reference.is_a? Xcodeproj::Project::Object::PBXFileReference
        xcconfig_path = config.base_configuration_reference.real_path
        IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("DT_TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
      end
     end
    end
   end
   end
 end